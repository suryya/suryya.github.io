{"version":3,"sources":["pages/baseball/actionTypes.js","pages/baseball/teamContext.js","components/TextError.js","pages/baseball/composeQuarter.js","pages/baseball/composeTeam.js","pages/baseball/index.js","theme/index.js","App.js","index.js"],"names":["CREATE_TEAM","ACTIONS","ADD_MEMBER","DATA_READY","CountStateContext","React","createContext","CountDispatchContext","positionOptions","asyncLocalStorage","key","value","Promise","resolve","then","localStorage","setItem","getItem","readFromStore","initState","a","savedState","JSON","parse","members","team","saveStateToLocalStorate","state","stringify","writeMiddleware","fn","arg","console","log","readMiddleware","baseballReducer","type","payload","BaseballProvider","children","initData","useRef","useReducer","current","dispatch","useEffect","init","fetchedData","fetchedStoredData","dispatchMiddleware","useCallback","action","newState","matched","filter","mem","fname","lname","length","Error","Provider","useTeamState","context","useContext","undefined","useTeamDispatch","memo","props","FormErrorMessage","ComposeTeam","useState","users","setUsers","toast","useToast","formInitValues","setFormInitValues","restoreSavedValues","initValues","map","p","position","memberNames","member","onSubmitCreateTeam","values","actions","reduce","acc","crr","i","setStatus","success","title","description","status","duration","isClosable","setSubmitting","validatTeamMembers","allValues","idx","error","repeatedUsers","user","validatePosition","repeatedPosition","pos","Flex","align","Box","w","h","Heading","as","size","onSubmit","initialValues","enableReinitialize","SimpleGrid","columns","spacingX","spacingY","Fragment","height","name","validate","field","form","FormControl","isInvalid","errors","touched","Select","placeholder","o","component","TextError","ButtonGroup","spacing","Button","variantColor","onClick","resetForm","isLoading","isSubmitting","ComposeQuarter","checkUniqueMember","validationSchema","useMemo","Yup","label","required","test","this","parent","typeError","positive","onSubmitMemberAdd","justify","Input","id","aria-describedby","List","styleType","BaseBallTeam","tabIndex","setTabIndex","Tabs","index","onChange","customTheme","theme","colors","brand","900","800","700","AppTheme","ThemeProvider","CSSReset","App","className","Helmet","charSet","rel","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51ccbab5.chunk.js","sourcesContent":["export default {\n  CREATE_TEAM: 'CREATE_TEAM',\n  ADD_MEMBER: 'ADD_MEMBER',\n  DATA_READY: 'DATA_READY',\n  };\n  ","import React , {useEffect, useCallback, useRef} from 'react'\nimport ACTIONS from './actionTypes';\nconst {CREATE_TEAM, ADD_MEMBER, DATA_READY} = ACTIONS;\n\nconst CountStateContext = React.createContext()\nconst CountDispatchContext = React.createContext()\n\n\nconst positionOptions = [\n  'point guard (PG)',\n  'shooting guard (SG)',\n  'power forward (PF)',\n  'small forward (SF)',\n  'the center (C)'\n];\n\nconst asyncLocalStorage = {\n  setItem: function (key, value) {\n      return Promise.resolve().then(function () {\n          localStorage.setItem(key, value);\n      });\n  },\n  getItem: function (key) {\n      return Promise.resolve().then(function () {\n          return localStorage.getItem(key);\n      });\n  }\n};\n\n\nasync function readFromStore(initState){\n  let savedState = await asyncLocalStorage.getItem('baseball-team')\n  if(savedState){\n    savedState = JSON.parse(savedState)\n  }\n  if(savedState?.members && savedState?.team  && \n     savedState?.positionOptions ){\n    return savedState\n  }else{\n    return initState\n  }\n}\n\n\nasync function saveStateToLocalStorate(state){\n  await asyncLocalStorage.setItem('baseball-team',JSON.stringify(state))\n}\n\nfunction writeMiddleware(fn){\n  return async (arg) => {\n    if(typeof fn === 'function'){\n      try{\n        await fn(arg)\n      }catch(e){\n        console.log(e)\n      }\n    }\n    return arg\n  }\n}\n\n function readMiddleware(fn){\n  return async (arg) => {\n    if(typeof fn === 'function'){\n      try{\n        arg = await fn(arg)\n      }catch(e){\n        console.log(e)\n      }\n    }\n    \n    return arg\n  }\n}\n\n\nfunction baseballReducer(state, {type,payload}) {\n  switch (type) {\n    default: {\n      return {...state,...payload}\n    }\n  }\n}\n\nfunction BaseballProvider({children}) {\n  const initData =  useRef({members: [],team:[],positionOptions})\n  const [state, dispatch] = React.useReducer(baseballReducer,initData.current)\n\n  useEffect( () => {\n    const fetchedStoredData = async function(init){\n      let fetchedData = await readMiddleware(readFromStore)(init)\n      dispatch({\n        type: DATA_READY,\n        payload: fetchedData\n      });\n    }\n    fetchedStoredData(initData.current)\n  }, [initData]);\n\n\n  const dispatchMiddleware = useCallback((dispatch) => {\n    return  (action) => {\n      let newState;\n      switch (action.type) {\n        case ADD_MEMBER:\n          let matched = state.members.filter((mem) => `${mem.fname}${mem.lname}` === `${action.payload.fname}${action.payload.lname}`)\n          if(matched && matched.length){\n            newState =  {...state}\n          }\n          newState = {...state,...{members: [...state.members,...[action.payload]]}}\n           writeMiddleware(saveStateToLocalStorate)(newState).then(()=>{\n            dispatch({type:action.type,payload:newState})\n           })\n          break;\n        case CREATE_TEAM:\n           newState = {...state,...{team:action.payload}}\n           writeMiddleware(saveStateToLocalStorate)(newState).then(()=>{\n              dispatch({type:action.type,payload:newState})\n           })\n          break;\n        default:\n          throw new Error(`Unhandled action type: ${action.type}`)\n      }\n    };      \n  },[state])\n  \n\n  return (\n    <CountStateContext.Provider value={state}>\n      <CountDispatchContext.Provider value={dispatchMiddleware(dispatch)}>\n        {children}\n      </CountDispatchContext.Provider>\n    </CountStateContext.Provider>\n  )\n}\n\n\nfunction useTeamState() {\n    const context = React.useContext(CountStateContext)\n    if (context === undefined) {\n      throw new Error('useCountState must be used within a CountProvider')\n    }\n    return context\n  }\n  function useTeamDispatch() {\n    const context = React.useContext(CountDispatchContext)\n    if (context === undefined) {\n      throw new Error('useCountDispatch must be used within a CountProvider')\n    }\n    return context\n  }\n\nexport {BaseballProvider, useTeamState, useTeamDispatch }\n","import React from 'react'\n\nimport {FormErrorMessage} from \"@chakra-ui/core\";\n\nfunction TextError (props) {\n  return <FormErrorMessage {...props}>{props.children}</FormErrorMessage>\n\n}\n\nexport default React.memo(TextError)\n","import React, { useEffect, useState , useCallback } from 'react';\nimport {Box, FormControl, Select , ButtonGroup, Button, SimpleGrid ,useToast, Heading, Flex } from \"@chakra-ui/core\";\nimport {useTeamState, useTeamDispatch} from './teamContext';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TextError from '../../components/TextError'\nimport ACTIONS from './actionTypes';\nconst {CREATE_TEAM} = ACTIONS;\n\nexport default function ComposeTeam() {\n\n    const dispatch = useTeamDispatch()\n    const {members,team,positionOptions} = useTeamState()\n    const [users,setUsers] = useState([]);\n    const toast = useToast();\n    const [formInitValues,setFormInitValues] = useState({});\n    \n    const restoreSavedValues = useCallback((team,positionOptions) => {\n            \n            let initValues = {users:positionOptions.map((p) => team?.[p] ?? ''), \n                              position:positionOptions.map((p) => team?.[p] ? p : '')}\n            setFormInitValues(initValues)        \n    },[])\n\n    useEffect(\n        () => {\n          let memberNames = members?.length && members.map(member => `${member.fname} ${member.lname}`);\n          setUsers(memberNames)\n        },\n    [members]);\n\n    useEffect(\n        () => {\n            restoreSavedValues(team,positionOptions)\n        },\n    [team,positionOptions,restoreSavedValues]);\n\n    const onSubmitCreateTeam = useCallback((values, actions) => {\n\n        let payload = values.position.reduce((acc,crr,i) => ({...acc,...{[crr]:values.users[i]}}) ,{});\n        dispatch({type:CREATE_TEAM,payload})\n        actions.setStatus({success: true})    \n        toast({\n            title: \"Success\",\n            description: \"Team successfully created\",\n            status: \"success\",\n            duration: 2000,\n            position: \"top-right\",\n            isClosable: true,\n            })\n        actions.setSubmitting(false);\n\n      }, [dispatch,toast]);\n\n\n    const validatTeamMembers = useCallback((value,allValues,idx) => {\n        console.log('validatTeamMembers:',allValues)\n        let repeatedUsers = allValues.users.filter((user) => user && user === value).length > 1 ? true : false;\n        let error;\n        if (!value) {\n          error = \"Team Member is required\";\n        } else if (repeatedUsers && allValues.users[idx] === value) {\n          error = \"Team member can't be repeated\";\n        }else if(allValues.position[idx] && allValues.users[idx] === value){\n            error = members.filter((member) => {\n                return `${member.fname} ${member.lname}` === value && member.position === allValues.position[idx]\n            })?.length === 0  ? 'Selcted user does not match the position' : undefined;  \n        }        \n\n        return error;\n    },[members]);\n\n    const validatePosition = useCallback((value,allValues,idx) => {\n        console.log('validatePosition:',allValues)\n        let repeatedPosition = allValues.position.filter((pos) => pos && pos === value).length > 1 ? true : false;\n        let error;\n        if (!value) {\n          error = \"Position is required\";\n        } else if (repeatedPosition && allValues.position[idx] === value) {\n          error = \"Position can't be repeated\";\n        }else if(allValues.users[idx] && allValues.position[idx] === value){\n            error = members.filter((member) => {\n                return `${member.position}` === value && `${member.fname} ${member.lname}` === allValues.users[idx]\n            })?.length === 0  ? 'Selcted position does not match the user' : undefined;      \n        }\n        return error;\n    },[members]);\n\n    return (\n        <Flex align=\"center\">\n\n            <Box w=\"70%\"  h=\"10\">\n\n                        <Heading as=\"h4\" size=\"md\"  p={4} >\n                            Compose bsae ball team\n                        </Heading>\n                        <Formik onSubmit={onSubmitCreateTeam} \n                                initialValues={formInitValues} \n                                enableReinitialize>\n                            {props => (\n                                <Form >\n                                    <Box w=\"100%\" p={4} >\n                                    <SimpleGrid  columns={2} spacingX=\"40px\"  spacingY=\"20px\">\n                                        {positionOptions?.length && positionOptions.map((pos,i) => {\n                                            return (\n                                            <React.Fragment key={pos}>\n                                                <Box height=\"80px\">\n                                                    \n                                                    <Field name={`users[${i}]`} validate={(value) => validatTeamMembers(value,props.values,i)}>\n                                                        {({ field, form }) => (\n                                                                <FormControl  isInvalid={form.errors?.users?.[i] && form.touched?.users?.[i]}>\n                                                                <Select  {...field} placeholder=\"Choose Member\">\n                                                                    {users?.length && users.map(o => {\n                                                                        return <option key={o} value={o}>{o}</option>\n                                                                    })}\n                                                                </Select>\n                                                                <ErrorMessage component={TextError}name={`users[${i}]`} />\n                                                                \n                                                                </FormControl>\n                                                        )}\n                                                    </Field>\n                                                </Box>\n\n                                                <Box height=\"80px\">\n                                                    <Field  name={`position[${i}]`} validate={(value) => validatePosition(value,props.values,i)}>\n                                                        {({ field, form }) => (\n                                                                <FormControl   isInvalid={form.errors?.position?.[i] && form.touched?.position?.[i]}>\n                                                                <Select  {...field} placeholder=\"Choose Position\">\n                                                                    {positionOptions?.length && positionOptions.map(o => {\n                                                                        return <option key={o} value={o}>{o}</option>\n                                                                    })}\n                                                                </Select>\n                                                                <ErrorMessage component={TextError}name={`position[${i}]`} />\n                                                                \n                                                                </FormControl>\n                                                        )}\n                                                    </Field>\n                                                </Box>\n                                            </React.Fragment>\n                                        )})}\n\n                                        <Box height=\"70px\">\n                                            <FormControl >\n                                                <ButtonGroup spacing={4}>\n                                                    <Button variantColor=\"gray\" size=\"md\" type=\"reset\" onClick={() => props.resetForm(formInitValues)}>\n                                                        Reset\n                                                    </Button>\n                                                    <Button variantColor=\"blue\" size=\"md\" isLoading={props.isSubmitting} type=\"submit\">\n                                                        Save\n                                                    </Button>\n                                                </ButtonGroup>\n                                            </FormControl>\n                                        </Box>\n\n                                    </SimpleGrid>\n                                    </Box>\n\n                                </Form>\n                            )}\n                        </Formik>\n            </Box>\n\n        </Flex>\n\n    );\n  }\n","import React,  {useCallback} from 'react';\n\nimport { Box, FormControl, Input, \n         Select , ButtonGroup, Button, SimpleGrid ,\n         useToast , List , ListItem  , Flex, Heading} from \"@chakra-ui/core\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport {useTeamState, useTeamDispatch} from './teamContext';\nimport TextError from '../../components/TextError'\nimport * as Yup from 'yup'\nimport ACTIONS from './actionTypes';\n\nconst {ADD_MEMBER} = ACTIONS;\n\nexport default function ComposeQuarter() {\n    const dispatch = useTeamDispatch()\n    const {members,positionOptions} = useTeamState()\n    const toast = useToast();\n\n    let formInitValues = { fname:'' , \n                           lname:'' , \n                           height:'', \n                           position:'' }\n\n    const checkUniqueMember = useCallback((values) => {\n        let matched = members.filter((mem) => `${mem.fname}${mem.lname}` === `${values.fname}${values.lname}`);\n        return (matched && matched.length)\n    },[members])\n\n\n    const validationSchema = React.useMemo(() => Yup.object({\n        fname: Yup\n          .string()\n          .label('First name')\n          .required()\n          .test('is-alpha', 'First name should contain characters only', function(value) {\n            return (/^[A-Za-z\\s]+$/.test(value))\n          })\n          .test('unique-name', 'Name should be unique', function(value) {\n            return !checkUniqueMember({fname:value,lname:this.parent.lname})\n          }),\n        lname: Yup\n          .string()\n          .label('Last name')\n          .required()\n          .test('is-alpha', 'Last name should contain characters only', function(value) {\n            return (/^[A-Za-z\\s]+$/.test(value))\n          })\n          .test('unique-name', 'Name should be unique', function(value) {\n            return !checkUniqueMember({lname:value,fname:this.parent.fname})\n          }),\n        height: Yup\n          .number()\n          .typeError('Height must be a number')\n          .label('Height')\n          .required()\n          .positive('should be a positive number'),\n        position: Yup\n          .string()\n          .label('Position')\n          .required()\n    }),[checkUniqueMember]);\n\n      \n\n    const onSubmitMemberAdd = useCallback((values, actions) => {\n        \n            dispatch({type:ADD_MEMBER,payload:values})\n            actions.resetForm({formInitValues})\n            actions.setStatus({success: true})    \n            toast({\n                title: \"Success\",\n                description: \"Added team member successfully\",\n                status: \"success\",\n                duration: 2000,\n                position: \"top-right\",\n                isClosable: true,\n              })\n            actions.setSubmitting(false);\n\n    }, [dispatch,toast,formInitValues]);\n\n\n    return (\n\n\n            <Flex align=\"center\">\n                <Flex size=\"65%\" align=\"center\" justify=\"center\">\n\n                    <Box w=\"100%\" h=\"10\">\n                        <Heading as=\"h4\" size=\"md\" p={4} >\n                            Enter team member details\n                        </Heading>\n                        <Formik\n                                initialValues={formInitValues}\n                                onSubmit={onSubmitMemberAdd}\n                                validationSchema={validationSchema}>\n                                \n                                {props => (\n                                    <Form>\n                                        <Box w=\"100%\" p={4} >\n\n                                        <SimpleGrid columns={1} spacing={10}>\n                                            <Box height=\"40px\">\n                                                <Field name=\"fname\" >\n                                                        {({ field, form }) => (\n\n                                                            <FormControl  isInvalid={form.errors.fname && form.touched.fname}>\n                                                                <Input  {...field} type=\"text\" id=\"f-name\" aria-describedby=\"Enter first name\"  \n                                                                        placeholder=\"First Name\"/>\n                                                                <ErrorMessage id=\"first-name-helper-text\" component={TextError} name=\"fname\" />\n                                                            </FormControl>\n\n                                                        )}\n                                                </Field>\n                                            </Box>\n\n\n                                            <Box height=\"40px\">\n                                                <Field name=\"lname\">\n                                                {({ field, form }) => (\n\n                                                    <FormControl   isInvalid={form.errors.lname && form.touched.lname}>\n                                                        <Input  {...field} type=\"text\" id=\"l-name\" aria-describedby=\"Enter last name\"  \n                                                            placeholder=\"Last Name\"/>\n                                                        <ErrorMessage id=\"last-name-helper-text\" component={TextError} name=\"lname\" />\n                                                    </FormControl>\n\n                                                )}\n                                                </Field>\n                                            </Box>\n\n                                            <Box height=\"40px\">\n                                                <Field name=\"height\">\n                                                {({ field, form }) => (\n\n                                                    <FormControl isInvalid={form.errors.height && form.touched.height}>\n                                                        <Input  {...field} type=\"text\" id=\"l-height\" aria-describedby=\"Enter height in cm*\"  \n                                                                placeholder=\"Height in cm\"/>\n                                                        \n                                                        <ErrorMessage id=\"height-helper-text\" component={TextError} name=\"height\" />\n                                                    </FormControl>\n                                                )}\n                                                </Field>\n                                            </Box>\n\n\n                                            <Box height=\"40px\">\n                                                <Field name=\"position\">\n                                                {({ field, form }) => (\n                                                        <FormControl   isInvalid={form.errors.position && form.touched.position}>\n                                                        <Select  {...field} placeholder=\"Choose Position\">\n                                                            {positionOptions?.length && positionOptions.map(o => {\n                                                                return <option key={o} value={o}>{o}</option>\n                                                            })}\n                                                        </Select>\n                                                        <ErrorMessage id=\"email-helper-text\" component={TextError} name=\"position\" />\n                                                        </FormControl>\n                                                )}\n                                                </Field>\n                                            </Box>\n\n\n                                            <Box height=\"70px\">\n                                                <FormControl >\n                                                    <ButtonGroup spacing={4}>\n                                                        <Button variantColor=\"gray\" size=\"md\" type=\"reset\" onClick={() => props.resetForm(formInitValues)}>\n                                                            Reset\n                                                        </Button>\n                                                        <Button variantColor=\"blue\" size=\"md\" isLoading={props.isSubmitting} type=\"submit\">\n                                                            Save\n                                                        </Button>\n                                                    </ButtonGroup>\n                                                </FormControl>\n                                            </Box>\n\n                                        </SimpleGrid>\n\n                                        </Box>\n\n                                                \n                                    </Form>\n                                )}\n\n                            </Formik>\n\n                    </Box>\n\n                </Flex>\n\n                <Flex size=\"35%\" align=\"center\" justify=\"center\">\n\n                    <Box w=\"100%\" h=\"10\" p={8} > \n                            {(members.length > 0) && \n                                <>\n                                    <Heading as=\"h4\" size=\"md\">\n                                        List of existing team members\n                                    </Heading>\n\n                                    <List as=\"ol\" styleType=\"decimal\">\n                                        {members?.map((member,i) => <ListItem key={`${i}`}>{member.fname} {member.lname}</ListItem>)}   \n                                    </List>\n                                </>\n                            }\n                    </Box>\n                </Flex>\n                \n            </Flex>\n\n    );\n  }\n","import React from 'react';\nimport { Tabs, TabList, TabPanels, Tab, TabPanel, Box } from \"@chakra-ui/core\";\nimport ComposeQuarter from './composeQuarter';\nimport ComposeTeam from './composeTeam';\nimport {BaseballProvider} from './teamContext';\n\n\n\nexport default function BaseBallTeam() {\n    const [tabIndex, setTabIndex] = React.useState(0);\n  \n  \n    const handleTabsChange = index => {\n      setTabIndex(index);\n    };\n  \n    return (\n      <Box w=\"100%\" p={4} >\n        \n        <Tabs index={tabIndex} onChange={handleTabsChange}>\n          <TabList>\n            <Tab>Compose Team</Tab>\n            <Tab>First Quarter</Tab>\n\n          </TabList>\n          <BaseballProvider>\n            <TabPanels>\n                <TabPanel>\n                    <ComposeTeam/>\n                </TabPanel>\n                <TabPanel>\n                    <ComposeQuarter/>\n                </TabPanel>\n            </TabPanels>\n          </BaseballProvider>\n\n        </Tabs>\n      </Box>\n    );\n  }","import { theme, ThemeProvider , CSSReset } from \"@chakra-ui/core\";\nimport React from \"react\";\n\n// Let's say you want to add custom colors\nexport const customTheme = {\n  ...theme,\n  colors: {\n    ...theme.colors,\n    brand: {\n      900: \"#1a365d\",\n      800: \"#153e75\",\n      700: \"#2a69ac\",\n    },\n  },\n};\n\nconst AppTheme = function({children}){\n    return <ThemeProvider theme={customTheme}>\n            <CSSReset />\n            {children}\n           </ThemeProvider>;\n}\n\nexport default AppTheme","import React from 'react';\nimport {BaseBallTeam} from './pages'\nimport { Helmet } from \"react-helmet\";\nimport AppTheme from './theme';\n\n\nfunction App() {\n  return (\n    <AppTheme>\n      <div className=\"App\">\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Baseball Team App</title>\n          <link rel=\"canonical\" href=\"https://reactjs.org/\" />\n        </Helmet>\n        <header className=\"App-header\">\n        </header>\n        <main>\n          <BaseBallTeam/>\n        </main>\n      </div>\n    </AppTheme>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n//import AppTheme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}